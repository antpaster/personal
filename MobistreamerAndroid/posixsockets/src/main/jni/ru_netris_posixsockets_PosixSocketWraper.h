/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ru_netris_posixsockets_PosixSocketWraper */

#ifndef _Included_ru_netris_posixsockets_PosixSocketWraper
#define _Included_ru_netris_posixsockets_PosixSocketWraper
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ru_netris_posixsockets_PosixSocketWraper
 * Method:    test1
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ru_netris_posixsockets_PosixSocketWraper_test1
  (JNIEnv *, jobject);

/*
 * Class:     ru_netris_posixsockets_PosixSocketWraper
 * Method:    test2
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ru_netris_posixsockets_PosixSocketWraper_test2
  (JNIEnv *, jobject, jint);

/*
 * Class:     ru_netris_posixsockets_PosixSocketWraper
 * Method:    test3
 * Signature: ([B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ru_netris_posixsockets_PosixSocketWraper_test3
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     ru_netris_posixsockets_PosixSocketWraper
 * Method:    connect
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_ru_netris_posixsockets_PosixSocketWraper_connect
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     ru_netris_posixsockets_PosixSocketWraper
 * Method:    close
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_ru_netris_posixsockets_PosixSocketWraper_close
  (JNIEnv *, jobject);

/*
 * Class:     ru_netris_posixsockets_PosixSocketWraper
 * Method:    send
 * Signature: ([BI)I
 */
JNIEXPORT jint JNICALL Java_ru_netris_posixsockets_PosixSocketWraper_send
  (JNIEnv *, jobject, jbyteArray, jint);

#ifdef __cplusplus
}
#endif
#endif
